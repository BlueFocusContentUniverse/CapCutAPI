version: '3.8'

services:
  # CapCut API Application
  capcut-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: capcut-api
    restart: unless-stopped
    environment:
      - PORT=9000
      - WAITRESS_THREADS=8
      - LOG_LEVEL=info
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DRAFT_DB=1
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    ports:
      - "9000:9000"
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data  # For persistent draft storage if needed
    depends_on:
      - redis
    networks:
      - capcut-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Redis for Celery and Draft Storage
  redis:
    image: redis:7-alpine
    container_name: capcut-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - capcut-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: capcut-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./ssl:/etc/ssl:ro  # Mount SSL certificates if you have them
    depends_on:
      - capcut-api
    networks:
      - capcut-network

volumes:
  redis-data:
    driver: local

networks:
  capcut-network:
    driver: bridge
